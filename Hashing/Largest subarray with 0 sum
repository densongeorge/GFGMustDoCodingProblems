/*This is a function problem.You only need to complete the function given below*/
class GfG
{
    int maxLen(int arr[], int n)
    {
        // Your code here
        HashMap<Integer,Integer> map = new HashMap<Integer,Integer>();
        int len=0;
        int sum=0;
        for(int i=0;i<arr.length;i++)
        {
          sum=sum+arr[i];
          //add the sum as key and the values as indices of the elements.
          if(sum==0&&len!=0)
          {
          // everything from the start will be a part of the soltuion.
              len=len>i+1?len:i+1;
          }
          if(!map.containsKey(sum))
          {
              map.put(sum,i+1);
          }
          else
          {
              // if the sum is already present in the map, we update the len but do not update the map entry so that we have the oldest index for the sum.
              int index=map.get(sum);
              len=len>i+1-index?len:i+1-index;
          }
        }
        return len;
    }
}
