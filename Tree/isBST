/*  A Binary Search Tree node
class Node
{
    int data;
    Node left, right;
    Node(int item)
    {
        data = item;
        left = right = null;
    }
} */
class GfG
{
    Node prev = null;
    int isBST(Node root)  
    {
        // Your code here
        prev = null;
        if(root == null) return 1;
       if(root.left == null && root.right == null) return 1;
       
       return inorder(root); 
        
    }
    
    // int isBSTUtil(Node root, int min, int max){
    //     if(root == null) return 1;
    //     if((root.data > min && root.data < max) && (isBSTUtil(root.left,min,root.data) == 1) && (isBSTUtil(root.right,root.data,max) == 1))
    //     return 1;
    //     return 0;
    
    
//    }
int inorder(Node root){
    if(root == null) return 1;
    if(inorder(root.left) == 1) {
    if(prev != null && root.data <= prev.data) return 0;
    prev = root;
    if(inorder(root.right) == 1) return 1;
    
    }
    
    return 0;
}
}
