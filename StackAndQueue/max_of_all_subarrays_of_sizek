import java.io.*;
import java.math.*;

class GFG 
{	
    public static void main(String[] args)throws IOException
    {
	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	 int t = Integer.parseInt(br.readLine());
		while(t-- > 0)
		{
				String [] ip = br.readLine().split(" ");
				int n = Integer.parseInt(ip[0]);
				int k = Integer.parseInt(ip[1]);
				int []a = new int[n];
				String [] arr = br.readLine().split(" ");
				for(int i = 0 ; i < n ; i++)
					a[i] = Integer.parseInt(arr[i]);
				Deque <Integer> q = new LinkedList<Integer>();
				StringBuffer sb=new StringBuffer();
				int i = 0;
				for(i = 0; i < k; i++){
				    while((!q.isEmpty())&&(a[i]>=a[q.peekLast()])) q.removeLast();
				    q.addLast(i);
				}
				for(; i < n ; i++){
				    sb.append(a[q.peekFirst()]+" ");
				    while(!q.isEmpty()&& q.peekFirst() <= (i-k))
				    q.removeFirst();
				    
				     while((!q.isEmpty())&&(a[i]>=a[q.peekLast()])) q.removeLast();
				    q.addLast(i);
				}
				 sb.append(a[q.peekFirst()]);
				System.out.println(sb);
			}	
		}
}
